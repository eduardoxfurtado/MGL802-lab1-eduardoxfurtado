"""create all tables

Revision ID: e4fda8211d8d
Revises: 
Create Date: 2019-11-08 08:48:02.781301

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e4fda8211d8d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faces_photos',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('face__id', sa.INTEGER(), nullable=True),
                    sa.Column('photo_id', sa.INTEGER(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tag',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('persons',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('uuid', sa.VARCHAR(), nullable=True),
                    sa.Column('first_name', sa.VARCHAR(), nullable=True),
                    sa.Column('last_name', sa.VARCHAR(), nullable=True),
                    sa.Column('email', sa.VARCHAR(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('country',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('photo',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('full_path', sa.VARCHAR(), nullable=True),
                    sa.Column('database_folder', sa.VARCHAR(), nullable=True),
                    sa.Column('original_date', sa.INTEGER(), nullable=True),
                    sa.Column('original_size', sa.INTEGER(), nullable=True),
                    sa.Column('original_file', sa.VARCHAR(), nullable=True),
                    sa.Column('rename', sa.VARCHAR(), nullable=True),
                    sa.Column('import_date', sa.INTEGER(), nullable=True),
                    sa.Column('modify_date', sa.INTEGER(), nullable=True),
                    sa.Column('owner', sa.VARCHAR(), nullable=True),
                    sa.Column('edited', sa.BOOLEAN(), nullable=True),
                    sa.Column('export', sa.BOOLEAN(), nullable=True),
                    sa.Column('orientation', sa.INTEGER(), nullable=True),
                    sa.Column('latitude', sa.FLOAT(), nullable=True),
                    sa.Column('longitude', sa.FLOAT(), nullable=True),
                    sa.Column('thumbnail', sa.BLOB(), nullable=True),
                    sa.Column('folder_id', sa.INTEGER(), nullable=True),
                    sa.Column('place_id', sa.INTEGER(), nullable=True),
                    sa.CheckConstraint('edited IN (0, 1)'),
                    sa.CheckConstraint('export IN (0, 1)'),
                    sa.ForeignKeyConstraint(['folder_id'], ['folder.id'], ),
                    sa.ForeignKeyConstraint(['place_id'], ['place.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('province',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(), nullable=True),
                    sa.Column('country_id', sa.INTEGER(), nullable=True),
                    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('photos_tags',
                    sa.Column('photo_id', sa.INTEGER(), nullable=True),
                    sa.Column('tag_id', sa.INTEGER(), nullable=True),
                    sa.ForeignKeyConstraint(['photo_id'], ['photo.id'], ),
                    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
                    )
    op.create_table('faces',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('photo_id', sa.INTEGER(), nullable=True),
                    sa.Column('left', sa.INTEGER(), nullable=True),
                    sa.Column('right', sa.INTEGER(), nullable=True),
                    sa.Column('top', sa.INTEGER(), nullable=True),
                    sa.Column('bottom', sa.INTEGER(), nullable=True),
                    sa.Column('face', sa.BLOB(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('relationship',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('description', sa.VARCHAR(length=32), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('place',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('street_number', sa.VARCHAR(), nullable=True),
                    sa.Column('route', sa.VARCHAR(), nullable=True),
                    sa.Column('postal_code', sa.VARCHAR(), nullable=True),
                    sa.Column('latitude', sa.FLOAT(), nullable=True),
                    sa.Column('longitude', sa.FLOAT(), nullable=True),
                    sa.Column('gps_radius', sa.FLOAT(), nullable=True),
                    sa.Column('title', sa.VARCHAR(), nullable=True),
                    sa.Column('description', sa.VARCHAR(), nullable=True),
                    sa.Column('locality_id', sa.INTEGER(), nullable=True),
                    sa.ForeignKeyConstraint(['locality_id'], ['locality.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('folder',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(), nullable=True),
                    sa.Column('title', sa.INTEGER(), nullable=True),
                    sa.Column('description', sa.INTEGER(), nullable=True),
                    sa.Column('nb_photos', sa.INTEGER(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('locality',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.VARCHAR(), nullable=True),
                    sa.Column('province_id', sa.INTEGER(), nullable=True),
                    sa.ForeignKeyConstraint(['province_id'], ['province.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    pass

def downgrade():
    op.drop_table('place')
    op.drop_table('relationship')
    op.drop_table('faces_photos')
    op.drop_table('folder')
    op.drop_table('persons')
    op.drop_table('tag')
    op.drop_table('photos_tags')
    op.drop_table('photo')
    op.drop_table('faces')
    op.drop_table('locality')
    op.drop_table('province')
    op.drop_table('country')
    op.drop_table('relationship')
    pass